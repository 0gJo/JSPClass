jsp : 자바를 사용하는 웹기술 


서버에서는 
buffer에 넣어서 출력 
( 다차면 .. 출력.. / none : 담을때마다 client로 출력)

charset = 생성할때
pageEncoding = jsp 저장할때 


JSP의 구성요소
1. 디렉티브     <%@ 
ㄱ.page 지시자
ㄴ.tablib 지시자 * : 
ㄷ.include 지시자 : 
2.스크립트 :
 스크립트릿  <%  자바코딩
 표현식  <%=   
 선언부  <%!   선언문(변수(필드), 함수)
	2.표현언어(EL) : ${param.n1 + param.n2} 
3.기본객체 : request, response, session, application, page 등
4.정적인 데이터
	5.표준액션태그 : <jsp:...>
6.커스텀태그와 표준태그라이브러리(STL)





ex08-498p : 서블릿 기초
conf - server.xml - port:80 변경..
(이클립스 것과 별개.. 이클립스 프로젝트에서만 해도당..)
C:\apache-tomcat-8.5.39\webapps\ROOT
만든파일들을 위의 경로 옮겨놓는것 == 배포

<방법2 - HelloServlet - annotation방법>



<방법1 - NowSevelet - xml 방법>
1. src- days01 pacakge 추가 
2. 생성 - 상속 - override (doGet, doPost,service)


web.xml - 서블릿으로 사용할 클래스 + 서블릿과 url간의 매핑 설정.. 
  <servlet>
  
  <servlet-name>now</servlet-name> => 임의로 설정.. 
  <servlet-class>days01.NowServlet</servlet-class> ==> cf)package명.class명
  </servlet>

  <servlet-mapping>
  <servlet-name></servlet-name> => 해당 name servlet이 응답 
  <url-pattern></url-pattern> ==> 어떤url을 요청하면 
  
  </servlet-mapping>


컴파일되어있지 않아서 404
web.xml을 변경하고나면 server restart해야 .. (변경된 web.xml읽어야하기때문..)

서블릿 : 웹페이지를 만들어서 응답해주는.. 

get방식 요청 ->doGet-> 버퍼에 페이지코딩 담아서 전송..
BUT, 한계 (PRINTln)
서블릿 : html 코딩 in java 코딩
jsp ; JAVA 코딩 IN HTML 코딩

MVC 는 분리 -> 자바코딩 IN 서블릿

웹컨테이너 : (서블릿)객체들이 생성되어 들어가있는것

jsper :java compiler

ContextPath() == contextRoot == /jspPro 









eclipse에서 class 파일의 저장은 => build에 저장.. 

--
* .html, * .jsp 등 - 응용 프로그램의 클라이언트 브라우저에서 볼 수 있어야하는 다른 파일 (예 : JavaScript, 스타일 시트 파일 및 이미지)과 함께 HTML 및 JSP 페이지. 큰 응용 프로그램에서는 이러한 파일을 하위 계층 구조로 나눌 수 있지만 작은 응용 프로그램의 경우이 파일에 대해 하나의 디렉토리 만 유지하는 것이 일반적으로 훨씬 간단합니다. 

/WEB-INF/web.xml - 응용 프로그램 의 웹 응용 프로그램 배포 설명자 . 이것은 응용 프로그램을 구성하는 서블릿 및 기타 구성 요소와 서버가 수행 할 초기화 매개 변수 및 컨테이너 관리 보안 제약 조건을 설명하는 XML 파일입니다. 이 파일은 다음 하위 섹션에서 자세히 설명합니다. 

/ WEB-INF / classes / -이 디렉토리에는 JAR 파일로 결합되지 않은 서블릿 및 비 서블릿 클래스를 포함하여 응용 프로그램에 필요한 모든 Java 클래스 파일 (및 관련 자원)이 들어 있습니다. 클래스가 Java 패키지로 구성되어있는 경우이 클래스를 아래의 디렉토리 계층 구조에 반영해야합니다 /WEB-INF/classes/. 예를 들어, 명명 된 Java 클래스는 명명 com.mycompany.mypackage.MyServlet 된 파일에 저장되어야합니다 /WEB-INF/classes/com/mycompany/mypackage/MyServlet.class. 

/ WEB-INF / lib / -이 디렉토리에는 타사 클래스 라이브러리 또는 JDBC 드라이버와 같이 응용 프로그램에 필요한 Java 클래스 파일 (및 관련 자원)을 포함하는 JAR 파일이 들어 있습니다.


--
웹 응용 프로그램 배포 설명자
/WEB-INF/web.xml파일에는 응용 프로그램에 대한 웹 응용 프로그램 배포 설명자가 들어 있습니다. 파일 이름 확장자에서 알 수 있듯이이 파일은 XML 문서이며 서버가 알아야 할 응용 프로그램에 대한 모든 것을 정의합니다 
Tomcat 컨텍스트 설명자
/META-INF/context.xml 파일을 사용하여 액세스 로그, 데이터 소스, 세션 관리자 구성 등과 같은 Tomcat 관련 구성 옵션을 정의 할 수 있습니다

docs / - 개발 팀에서 사용하는 형식에 관계없이 응용 프로그램에 대한 설명서입니다.

src / - 서블릿, bean 및 응용 프로그램에 고유 한 기타 Java 클래스를 생성하는 Java 소스 파일. 소스 코드 패키지 (구성되어있는 경우 매우 권장), 패키지 계층 구조는이 디렉토리 아래에 디렉토리 구조로 반영되어야한다.

web / - 응용 프로그램 클라이언트가 액세스 할 수있는 웹 사이트의 정적 컨텐츠 (HTML 페이지, JSP 페이지, JavaScript 파일, CSS 스타일 시트 파일 및 이미지)입니다. 이 디렉토리는 웹 응용 프로그램 의 문서 루트 가되며 여기에있는 하위 디렉토리 구조는 해당 파일에 액세스하는 데 필요한 요청 URI에 반영됩니다.

web / WEB-INF / - 클라이언트에서 접근 못함.
- 웹 응용 프로그램 배포 설명자 ( 서블릿 사양에web.xml 정의 됨 ), 작성한 사용자 정의 태그 라이브러리의 태그 라이브러리 설명자 및 포함 할 기타 자원 파일을 포함하여 응용 프로그램에 필요한 특수 구성 파일 귀하의 웹 응용 프로그램 내에서. 이 디렉토리는 문서 루트 의 하위 디렉토리 인 것처럼 보이지만Servlet Specification은이 디렉토리 (또는 포함 된 파일)의 내용을 클라이언트 요청에 직접 제공하는 것을 금지합니다. 따라서 데이터베이스 연결 사용자 이름 및 암호와 같이 중요한 구성 정보를 저장하기에 적합하지만 응용 프로그램이 성공적으로 작동하는 데 필요합니다.




[	]
[ㅇ]ex04

[ㅇ]p57 ContentType 속성과 캐릭터셋
[ㅇ]p63 JSP페이지의 인코딩과 pageEncoding 속성
[ㅇ]p514 - 정독.. 암기 

예 / 목차

[내일]
p506 2.5 서블릿로딩과 초기화 ~ 2.6 초기화 파라미터
p514
p72~
test

link 태그 클릭시 number input 값 넘기기

Servelt 결과 문서에서 한글깨짐

JSP : <%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
서블릿 : resp.setContentType("text/html;charset=UTF-8");


2.4 방식별 구현 메서드
get, post 방식에 상관없이 똑같은 처리 하는 경우 -> service만 사용
다르게 처리할 경우 get, post 2개 사용..

일반적으로 post가 get 호출..
( 다르게 하고싶으면 호출 코딩지우고 따로 코딩..)

MethodServlet.java
p83 5.2.4  요청파라미터인코딩
	5.2.5
	
2.5 서블릿로딩과 초기화
<load-on-startup> -> 첫번째 호출되지 않고도  서버시행할 때 가장 먼저 올라감
용도 : DBConn 과 같이 로딩시간이 오래걸리고, 요청이 생길떄마다 생성하기 번거로운것들
1) 
web.xml
    <servlet>
    <servlet-name>lifeCycle</servlet-name>
    <servlet-class>days02.LifeCycle</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>


2) annotation방식
@WebServlet(urlPatterns= "/days02/method", loadOnStartup=2)

--p509  2.6 초기화파라미터
DBCPInit.java 
WEB-INF-lib 에 ojdbc6.jar 파일 이동해야..


Web.xml에 DBCPInit.java 서블릿을 
<load-on-startup>1</load-on-startup> 옵션으로 등록하면
서버가 시행될때 자동으로 해당 서블릿 객체가 생성
(->init()->loadJDBCDriver()->intConnectionPool())
+
web.xml에  init-param 옵션을 설정하면, 객체가 생성될때 어떠한 변수(param)을 고정으로 주는것
유지보수를 위해 사용
해당 서블릿 (클래스) 코드 내에서는 web.xml에서 설정한 param의 값을 this.getInitParameter("url"); 형식으로 get
<init-param>
			<param-name>className</param-name>
			<param-value>oracle.jdbc.driver.OracleDriver</param-value>
</init-param><!-- 서블릿객체가 생성될때 param으로 줄값 -->

p.514 URL 패턴 매핑 규칙 - 강사님필기 ex03.jsp
[ 패턴규칙 ]
1. / ~ /*  : 경로만을 이용해서 찾는다
ex./foo/bar -> localhost/jspPro/foo/bar/...
2. 확장자로 만 : *. 
3. / 
<servlet-class>days02.BasicServlet</servlet-class>
<url-pattern>/</url-pattern>
==> 오직 days02.BasicServlet 서블릿만 호출
4. 그외
/days02  -> 
-
3,4 -> 오직 1:1
1,2 -> 여러개 매핑가능
-
1+2 등 여러개의 유형을 섞어쓸수 없다

-----------------------------------------------------------
ex04.html - p.72 request 기본 객체 (생성안해도 사용 ㅇ) - 강사님 필기..
request 기본 객체
1. 클라이언트와 관련된 정보 읽기 기능
2. 서버와 관련된 정보 읽기 기능
3. 클라이언트가 전송한 요청 파라미터 읽기 기능
4. 					       헤더
5.     					쿠키 
( Url 입력하고 엔터시 쿠키정보도 함께 전달됨)
6. 속성 처리 기능

----------------------------------------------------------------
ex05 + ok
하나의 parameter에 여러 value가 submit 될때
-->request.getParameterValues()
request.getParameterNames()

ex06 - p.88 -  5.3 요청헤더정보처리

---
ex07 - p.90 - response 기본객체 
1. 헤더정보 이벽


2. 리다이렉트하기 (redirect) -ex07_02 => 처리과정***

?error -> request.getParameter("error") : ""
?error = 10								: 10


  		->								: null (param이 없는 경우)

---------
ex09 DB연동
ex09_02 = ex09 + DTO객체



---------------
1. / == localhost/
		//String location = "/days02/Login.jsp?";
		//http://localhost   /days02/Login.jsp?ok ==> 404 에러
2. . == localhost/JspPro/해당파일이 위치하고 있는 현재패키지
		//String location =             "./days02/Login.jsp?";
		//http://localhost/JspPro/days02/days02/Login.jsp?ok ==> 404 에러
3. (생략) == localhost/JspPro/해당파일이 위치하고 있는 현재패키지/ 
		String location = "ex07.jsp";
		//http://localhost/JspPro/days02/ex07.jsp


* 서블릿에서 / == localhost/JspPro/

root부터 경로를 찾아간다.. 

action="method"
@WebServlet(urlPatterns="/days02/method" ...


background-image: url("/webPro/css/days02/images/img_tree.png");ㄴ

[	]
ex09


test
2. 리다이렉트하기 (redirect) -ex07_02 ***
***ex07~ex07_03
ex07.jsp 요청페이지 
ex07_02.jsp - jsp에서 처리 (redirect)
Ex07_03.java - Servlet에서 처리 (redirect)
[ㅇ]***DB연동 ex09_02 + DTO객체 이용하기   
++ 스크립트 코딩(java 코딩) 만 나중에 서블릿으로 따로 빼서 관리하고 JSP에서는 출력하는 용도로만.. 

[	]
MVC 패턴..
JDBC..
[ 내일... ]
DB에서 불러온 데이터 로 HTML TABLE 만들기
------------
   <!-- p 509 초기화 파라미터 -->
   <!-- p 514 URL 패턴 매핑 규칙 -->
   <!-- 
   [~/ex.jsp]         -> 요청 ->       ex.jsp
   [ URL요청 ]               ->           서블릿클래스
   
   url 요청 패턴 정하기
   
   /days/*.htm  X     경로 + 확장 
   
   
   [패턴 규칙]
   4. 그외 패턴   일치
     <servlet-class>days01.BasicServlet</servlet-class>
     <url-pattern>/days02</url-pattern>  경로패터 X , 확장자 패턴 X, 기본 매핑 X
     http://localhost/jspPro/days02
   
   3. 오직 '/' 만 어플리케이션의 기본 서블릿 매핑
   <servlet-class>days01.BasicServlet</servlet-class>
   <url-pattern>/</url-pattern>
   
   2.  확장자    :    '*.'   시작
       <servlet-class>days01.SiStServlet</servlet-class>
       <url-pattern>*.sist</url-pattern>
     http://localhost/ex10.sist
     http://localhost/jspPro/foo/bar/ex01.sist
   
   1.  경로 패턴 :    '/' 로 시작  ~~~~   '/*'
      예)                 /       foo/bar        /*
      
      <servlet-class>days01.NowServlet</servlet-class>
      <url-pattern>/foo/bar/*</url-pattern>
      
      http://localhost/jspPro/foo/bar/ex01.jsp
      http://localhost/jspPro/foo/bar/ex01.html
      http://localhost/jspPro/foo/bar/ex01.do
      http://localhost/jspPro/foo/bar/ex01
      http://localhost/jspPro/foo/bar/test/ex01.jsp
     -->